{
  
    
        "post0": {
            "title": "Agreement between methods of measurement with multiple observations per individual",
            "content": "Introduction . The limits of agreement (LoA) method is widely used for assessing the agreement between two methods of measurement. The case that motivates this method is when each individual has one measurement made by each of the methods. . However, it may be also the case that we have replicate measurements by each method on each individual, so that the repeatability of the two methods can be compared. This paper shows how to apply the LoA method when we have repeated measurements on each of a group of subjects. In this case, there are two separate situations: when the true value varies and when the true value is constant. . This post covers only the case where the true value varies. . Concepts . data = pd.read_csv(&#39;observations_310320.csv&#39;) data[&#39;errors&#39;] = data[&#39;method1&#39;] - data[&#39;method2&#39;] data[&#39;means&#39;] = (data[&#39;method1&#39;] + data[&#39;method2&#39;])/2 # data[&#39;errors&#39;] = data[&#39;errors&#39;] / data[&#39;means&#39;] data.head() . subject method1 method2 errors means . 0 1 | 7.83 | 6.57 | 1.26 | 7.200 | . 1 1 | 7.42 | 5.62 | 1.80 | 6.520 | . 2 1 | 7.89 | 6.90 | 0.99 | 7.395 | . 3 1 | 7.12 | 6.57 | 0.55 | 6.845 | . 4 1 | 7.88 | 6.35 | 1.53 | 7.115 | . Method where the true value varies . We want to estimate the mean difference and the standard deviation of differences about the mean. To do this, we must estimate two different variances: . That for repeated differences between the two methods on the same subject | That for repeated differences between the averages of the two methods across subjects | . The model is that the observed difference is the sum of the mean difference (bias), a random between subjects effect (heterogeneity) and a random error within the subject. . $$e = mu + w_{ text{inter}} + w_{ text{intra}}$$ . This method requires two major assumptions: . The within-subject (intra) variance is constant and observations within the subject are independent, i.e. the variance that originates the errors in our model for two given subjects is the same, but the mean is not necessarily the same. . | The repeated differences for a single subject are independent. . | . Estimate $ sigma^2_{ text{intra}}$ . This variance can be estimated using the difference between matched pairs as a response. First, it should be checked that the variance is unrelated to the mean. Plotting the mean measurement for each subject against the standard deviation should show if there is any suggestion of that. . subject_groups = data.groupby(&#39;subject&#39;) subj_variance = subject_groups.std()[&#39;errors&#39;].sort_index() subj_mean = subject_groups.mean()[&#39;errors&#39;].sort_index() plt.scatter(subj_mean, subj_variance) plt.ylabel(&#39;Standard deviation&#39;) plt.xlabel(&#39;Mean&#39;) plt.show() . According to the article, . There is no suggestion that there is a relationship between the variability of the differences and the magnitude of the ejection fraction. . The one-way ANOVA is shown in the table below. . import statsmodels.api as sm from statsmodels.formula.api import ols data[&#39;subject&#39;] = data[&#39;subject&#39;].astype(str) lm = ols(&#39;errors ~ subject&#39;,data=data).fit() table = sm.stats.anova_lm(lm) table . df sum_sq mean_sq F PR(&gt;F) . subject 11.0 | 43.567049 | 3.960641 | 17.397988 | 3.436678e-13 | . Residual 48.0 | 10.927169 | 0.227649 | NaN | NaN | . According to the article, . The estimated variance of multiple between-method differences for the same subject is the mean square error, of the residual mean square. . var_intra = table.mean_sq[&#39;Residual&#39;] var_intra . 0.22764935515873017 . Estimate $ sigma^2_{ text{inter}}$ . The variance for differences between the average across subjects can also be found from the ANOVA table, using the difference between the mean squares for subjects and the residual mean square. . var_inter = table.mean_sq[&#39;subject&#39;] - table.mean_sq[&#39;Residual&#39;] var_inter . 3.7329914889971145 . We must divide this by a value which depends on the number of observation on each subject. If the number of observations on subject $i$ is $m_i$, this divisor is . $$ frac{ left( sum m_i right)^2 - sum m_i^2}{(n-1) sum m_i}$$ . where $n$ is the number of subjects. If all subject have the same number of observations $m$, this factor reduces to $m$. . num_samples = data.shape[0] square_of_sum = num_samples ** 2 subject_count = data.groupby(&#39;subject&#39;).count()[&#39;errors&#39;] n_subjects = subject_count.shape[0] sum_of_squares = sum(subject_count ** 2) print(f&#39;Sum of squares is {sum_of_squares}.&#39;) denominator = (square_of_sum - sum_of_squares)/((n_subjects-1) * num_samples) denominator . Sum of squares is 314. . 4.9787878787878785 . var_inter = var_inter / denominator var_inter . 0.7497791791655799 . Calculate total variance . The total variance for single differences on different subjects is then $ sigma_{ text{inter}} + sigma_{ text{intra}}$ . var = var_inter + var_intra var . 0.9774285343243101 . If the subject differences weren&#39;t accounted, the variance would be: . var_all = data[&#39;errors&#39;].std() ** 2 var_all . 0.9236308192090397 . If only the mean differences were accounted, the variance would be . var_means = data.groupby(&#39;subject&#39;).mean()[&#39;errors&#39;].std() ** 2 var_means . 0.849725117999725 . Make Bland-Altman plot . stdev = np.sqrt(var) stdev . 0.9886498542579724 . mean = data[&#39;errors&#39;].mean() mean . 0.6021666666666667 .",
            "url": "https://herculanodavi.github.io/listofbizus/jupyter/2020/03/31/compound_bland_altman.html",
            "relUrl": "/jupyter/2020/03/31/compound_bland_altman.html",
            "date": " • Mar 31, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://herculanodavi.github.io/listofbizus/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://herculanodavi.github.io/listofbizus/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}